Queue via Stacks: Implement a MyQueue class which implements a queue using two stacks

// Queue is a reverse stack
// 
// Stack a    Push 1 2 3 
// 3 2 1
// Stack b  peek
// 1 2 3
// put things in newest
// when poll or peeking
// push newest to oldest if oldest is empty
// and pop or peek from oldest

public class MyQueue{

  Stack<Integer> newest;
  Stack<Integer> oldest;
  
  public MyQueue(){
  
    newest = new Stack<Integer>();
    oldest = new Stack<Integer>();
  }
  
  public void add(int a)[
    newest.push(a);
  
  }
  
  public int poll(){
    shiftStacks();
    return oldest.pop();
  
  }
  public int peek(){
    shiftStacks();
    return oldest.peek();
  }
  private void shift(){
    if(!stackOldest.isEmpty()) return;
    while(!newest.isEmpty()){
      oldest.push(newest.pop());
     }
  }
  public int size(){
    return newest.size() + oldest.size();
  }
}
