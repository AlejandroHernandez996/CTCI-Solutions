Stack Min: How would you design a stack which, in addition to push and pop, has a function min
which returns the minimum element? Push, pop and min should all operate in 0(1) time. 

// regular stack


class MinStack[

  List<Integer> stack = new ArrayList<Integer>();
  List<Integer> min = new ArrayList<Integer>();
  
  public void push(int val){
    stack.add(val);
    if(min.size() == 0){
      min.add(val);
    }else{
      min.add(Math.min(min.get(min.size()-1),val));
    }
  }
  public int pop(){
    if(stack.size() > 0){
      int val = stack.get(stack.size()-1);
      stack.remove(stack.size()-1);
      min.remove(min.size()-1);
      return val;
    }
    return -1;
  }
  public int min(){
    return min.get(min.size()-1);
  }
}
